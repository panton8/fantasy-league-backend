# Generated by Django 5.1.7 on 2025-04-22 15:06

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('team', '0004_alter_clubinfo_club'),
    ]

    operations = [
        migrations.CreateModel(
            name='GameWeek',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number', models.PositiveSmallIntegerField()),
                ('actual_from', models.DateTimeField()),
                ('actual_to', models.DateTimeField()),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('home_club_goals', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('away_club_goals', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('start_time', models.DateTimeField()),
                ('full_time', models.BooleanField(default=False)),
                ('processed', models.BooleanField(default=False)),
                ('away_club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_teams', to='team.club')),
                ('gameweek', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='match.gameweek')),
                ('home_club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_teams', to='team.club')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MatchEvent',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('minute', models.PositiveSmallIntegerField()),
                ('additional_minute', models.PositiveSmallIntegerField()),
                ('action', models.CharField(choices=[('goal', 'GOAL'), ('assist', 'ASSIST'), ('yellow_card', 'YELLOW CARD'), ('red_card', 'RED CARD'), ('sub_on', 'SUB_ON'), ('sub_off', 'SUB_OFF'), ('own_goal', 'OWN_GOAL'), ('penalty_save', 'PENALTY SAVE'), ('penalty_miss', 'PENALTY MISS'), ('save', 'SAVE')], max_length=15)),
                ('for_display', models.BooleanField(default=True)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='match.match')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='team.player')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LineUp',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('in_start', models.BooleanField(default=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appearances', to='team.player')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_up', to='match.match')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('match', 'player'), name='match_unique_player')],
            },
        ),
    ]
